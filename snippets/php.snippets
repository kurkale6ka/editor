snippet skel
	<?php

	${1}
snippet {
	<?php

	${1}
snippet \e
	<?php echo $${1:this->} ?>
snippet \E
	<?php echo ${1} ?>
snippet '
	<?php echo '${1}' ?>
snippet php
	<?php ${1} ?>
snippet \v
	var_dump($${1:this->}${2});
snippet $
	$this->${1}
# Comments
snippet \cc
	/* ${1} */
snippet \cs
	/**
	 * ${1}
	 */
# Control structures
snippet if
	if (${1}) {

		${2};
	}

	${3}
snippet ife
	if (${1}) {

		${2};

	} else {

		${3};
	}

	${4}
snippet ifee
	if (${1}) {

		${2};

	} elseif (${3}) {

		${4};

	} else {

		${5};
	}

	${6}
snippet while
	while (${1}) {

		${2};
	}

	${3}
snippet do
	do {
		${1};

	} while (${2});

	${3}
snippet for foreach: value
	foreach ($${1:this->array} as $${2:value}) {

		${3:$$2};
	}

	${4}
snippet for foreach: key, value
	foreach ($${1:this->array} as $${2:key} => $${3:value}) {

		${4:$$2};
	}

	${5}
snippet for for
	for ($${1:i} = ${2:0}; $$1 <= ${3:11}; $$1++) {

		${4:$$1};
	}

	${5}
snippet case
	switch (${1}) {

		case ${2:0}:
			${3};
			break;

		case ${4:1}:
			${5};
			break;

		case ${6:2}:
			${7};
			break;

		default:
			${8};
	}

	${9}
snippet class
	<?php
	/**
	 * @package ${1:name}
	 */
	/**
	 * ${2:Short Description}
	 *
	 * @package ${3:$1}
	 * @author `g:snips_author` <${4:fname}.${5:lname}@${6:company}>
	 */
	class ${7:Name} {

		${8}
	}
snippet prop
	${1:private} $${2:_property} = ${3:value};

	${4}
snippet fun
	/**
	 * ${1:Description}
	 *
	 * ${2:@param type $varname description}
	 * ${3:@return type description}
	 */
	${4:private }function ${5:_name}(${6:$arg1}) {

		${7};
	}

	${8}
snippet cons
	function __construct(${1:$arg1}) {

		${2};
	}

	${3}
snippet try
	try {
		${1};

	} catch (${2:Exception} $${3:e}) {

		${4:$$3->getMessage()};
	}

	${5}
snippet [ Values
	array('${1:val1}', '${2:val2}', '${3:val3}');
snippet [ Key => Value pairs
	array(
		'${1:key1}' => '${2:val1}',
		'${3:key2}' => '${4:val2}',
		'${5:key3}' => '${6:val3}'
	);
