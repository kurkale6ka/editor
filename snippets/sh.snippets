snippet skel
#! /usr/bin/env bash

# ${1:Short Description}
#
# Author: `g:snips_author` <mitkofr@yahoo.fr>
# -------------------------------------------

${2:shopt -s extglob}
endsnippet

# Loops
snippet for "for variable in words" !
for ${1:i} in ${2:"\$@"}; do

   ${3:echo} "\$$1"
done
endsnippet

snippet for "for variable in range"
for ${1:i} in \{${2:start}..${3:end}}; do

   ${4:echo} "\$$1"
done
endsnippet

snippet for "C-like for"
for ((${1:i} = ${2:0}; $1 < ${3:10}; $1++)); do

   ${4:commands}
done
endsnippet

snippet while
while ${1:command}; do

   ${2:commands}
done
endsnippet

snippet until
until ${1:command}; do

   ${2:commands}
done
endsnippet

# Switch / select
snippet case "Case" !
case "\$${1:variable}" in

   ${2:glob1}) ${3:command};;
   ${4:glob2}) ${5:command};;
   ${6:glob3}) ${7:command};;
   *) ${8:default_command};;
esac
endsnippet

snippet case "Select"
options[0]='${1}'
options[1]='${2}'
options[2]='${3}'

select choice in "${options[@]}"; do

   case "$choice" in

      "${options[0]}") ${4}; break;;
      "${options[1]}") ${5}; break;;
      "${options[2]}") ${6}; break;;
   esac
   echo '*** Wrong choice ***'
done
endsnippet

snippet read
read -p '${1:Enter value:}' ${2:var}
endsnippet

snippet if "Commands" !
if ${1:commands}; then

   ${2:commands}
fi
endsnippet

snippet if "String comparison"
if [[ ${1:'test'} ${2:==} ${3:\$right_operand} ]]; then

   ${4:commands}
fi
endsnippet

snippet if "Digit comparison"
if (( ${1:0} ${2:<} ${3:j} )); then

   ${4:commands}
fi
endsnippet

# Arrays
snippet [ "Create an array"
${1:array}=(${2:words})
endsnippet

snippet [ "Use an array"
${${1:array}[@]}
endsnippet

snippet <>
while read -r -d \$'\0'; do

   ${1:"\$REPLY"}

done < <(${2:find /foo -print0})
endsnippet

snippet fun
${1:name}() {

   ${2:commands}
}
endsnippet

snippet alias
alias ${1:name}='${2}'
endsnippet

# Extended globs
snippet ~ "Extended globs declaration"
shopt -s extglob
endsnippet

snippet ~ "Extended globs ?"
?(${1:item1}|${2:item2})
endsnippet

snippet ~ "Extended globs *"
*(${1:item1}|${2:item2})
endsnippet

snippet ~ "Extended globs +"
+(${1:item1}|${2:item2})
endsnippet

snippet ~ "Extended globs @: matches 1 of the given patterns"
@(${1:item1}|${2:item2})
endsnippet

snippet ~ "Extended globs !: matches anything but the patterns"
!(${1:item1}|${2:item2})
endsnippet

snippet 0
"\$${1:0}"${2}
endsnippet

snippet 1
"\$${1:1}"${2}
endsnippet

snippet 2
"\$${1:2}"${2}
endsnippet

snippet 3
"\$${1:3}"${2}
endsnippet

snippet 4
"\$${1:4}"${2}
endsnippet

snippet 5
"\$${1:5}"${2}
endsnippet

snippet 6
"\$${1:6}"${2}
endsnippet

snippet 7
"\$${1:7}"${2}
endsnippet

snippet 8
"\$${1:8}"${2}
endsnippet

snippet 9
"\$${1:9}"${2}
endsnippet

# Parameter expansion
snippet / "remove 1 from start"
\$\{${1:parameter}#${2:word to remove}}
endsnippet

snippet / "remove ALL from start"
\$\{${1:parameter}##${2:word to remove}}
endsnippet

snippet / "remove 1 from end"
\$\{${1:parameter}%${2:word to remove}}
endsnippet

snippet / "remove ALL from end"
\$\{${1:parameter}%%${2:word to remove}}
endsnippet

snippet / "s///"
\$\{${1:parameter}/${2:old}/${3:new}}
endsnippet

snippet / "s/// ALL"
\$\{${1:parameter}//${2:old}/${3:new}}
endsnippet

snippet / "substring in parameter"
\$\{${1:parameter}:${2:start (0, ...)}${3::}${4:length (or everything)}}
endsnippet

snippet / "file.ext (remove everything in front)"
\$\{${1:file name}##*/}
endsnippet

snippet / "Remove extension of file"
\$\{${1:file name}%.*}
endsnippet

snippet / "length of parameter"
\$\{#${1:parameter}}
endsnippet

snippet / "all parameters starting with prefix"
\$\{!${1:prefix}@}
endsnippet

snippet / "Parameter expansion on arrays"
\$\{${1:parameters array}[@]${2}#%:/}
endsnippet

# Renaming files
snippet ren
for file in ${1:*}; do mv -- "\$file" "${file%.*}".${2:new}; done
endsnippet

snippet p
printf '%s\n' ${1}
endsnippet

snippet e
>&2
endsnippet
